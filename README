ZooDB
=====
ZooDB is an object oriented database based on the JDO 3.0 standard.
It is written by Tilmann Zaeschke.
It is licensed under GPLv3 (GNU Public License), see file COPYING.


Current Status
==============
Under development, but already in use by some university projects.


Current Features
================
- Works as normal database or as in-memory database
- Fast (4x faster than db4o using db4o's PolePosition benchmark suite)
- Reasonably scalable, has been used successfully with 60,000,000+ objects in a 30+ GB database
- Crash-recovery/immunity (dual flush, no log-file required)
- Open source (GPLv3)
- Standard stuff: commit/rollback, query, indexing, lazy-loading, transitive persistence & updates, embedded object support (second class objects)
- Queries support standard operators, indexing, parameters, aggregation (avg, max, min), projection, uniqueness and setting result classes (partial).
- XML export/import (currently only binary attributes)
- Schema evolution is ~90% complete (updating OIDs is not properly supported, no low level queries)

Current Limitations
===================
- No backup (except copying the DB file)
- Single-user/single session only
- Not thread-safe
- No stand-alone server
- JDO only partially supported:
  - Some query features not supported: group by, order by, range, variables, imports, setting result classes (partial).  
  - No XML config or Annotations; configuration only via Java API
  - Manual enhancement of classes required (insert activateRead()/activateWrite() & extend provided super-class).
- Little documentation (some example code), but follows JDO 3.0 spec.


Dependencies
============
* JDO 3.0 (Java Data Objects): 
  - URL: https://db.apache.org/jdo/
  - JAR: jdo2-api-3.0.jar
* JTA (Java Transaction API):
  - URL: http://java.sun.com/products/jta/
  - JAR: jta.jar
* JUnit (currently use 4.8.1, but should work with newer and older versions as well):
  - URL: http://www.junit.org/
  - JAR: junit-4.8.1.jar


Contact
=======
zoodb(AT)gmx(DOT)de


  